config:
  clientID: "{{ google_client_id }}"
  clientSecret: "{{ google_client_secret }}"
  cookieSecret: "{{ cookie_secret }}"
  configFile: |-
{% if (graylog_open_to_public is not defined or graylog_open_to_public is false) and (send_logs_to_graylog is defined and send_logs_to_graylog is true) and (graylog_open_to_private is defined and graylog_open_to_private is true) %}
    redirect_url = "http://{{ oauth2_proxy_lb_ip }}.nip.io/oauth2/callback"
{% else %}
    redirect_url = "{{ oauth2_proxy_redirect_url }}"
{% endif %}
    email_domains = {{ kibana_oauth_authenticated_email_domains_kube }}
    cookie_expire = "24h"
    cookie_refresh = "4h"
{% if (graylog_open_to_public is defined and graylog_open_to_public is true) or (send_logs_to_graylog is not defined or send_logs_to_graylog is false) %}
    cookie_secure = true
    cookie_httponly = true
{% else %}
    cookie_secure = false
    cookie_httponly = false
{% endif %}
    silence_ping_logging = true
    skip_provider_button = true

alphaConfigFile:
  upstreams:
  - flushInterval: 1s
    id: /
    passHostHeader: true
    path: /
    proxyWebSockets: true
{% if send_logs_to_graylog is defined and send_logs_to_graylog is true %}
    uri: "http://graylog.logging.svc.cluster.local"
{% else %}
    uri: "http://{{ kibana_service }}"
{% endif %}
  server:
    BindAddress: 0.0.0.0:4180
  injectRequestHeaders:
  - name: X-Forwarded-Groups
    values:
    - claim: groups
  - name: X-Forwarded-User
    values:
    - claim: user
  - name: X-Forwarded-Email
    values:
    - claim: email
  - name: X-Forwarded-Preferred-Username
    values:
    - claim: preferred_username
{% if (graylog_open_to_public is not defined or graylog_open_to_public is false) and (send_logs_to_graylog is defined and send_logs_to_graylog is true) and (graylog_open_to_private is defined and graylog_open_to_private is true) %}
  - name: Graylog-User
    values:
    - value: "{{ viewer | b64encode }}"
  - name: X-Graylog-Server-URL
    values:
    - value: "{{ http://{{ oauth2_proxy_lb_ip }}.nip.io | b64encode }}"
{% endif %}

image:
  repository: "quay.io/oauth2-proxy/oauth2-proxy"
  tag: "v7.1.3"
  pullPolicy: "IfNotPresent"

replicaCount: {{ oauth2_replicas | default(1) }}

resources:
   limits:
     cpu: 500m
     memory: 500Mi
   requests:
     cpu: 100m
     memory: 108Mi

authenticatedEmailsFile:
  enabled: true
  restricted_access: |-
     {% for key in kibana_oauth_authenticated_email_ids %}
      {{key}}
     {% endfor %}

fullnameOverride: "oauth2-proxy"

{% if (graylog_open_to_public is not defined or graylog_open_to_public is false) and (send_logs_to_graylog is defined and send_logs_to_graylog is true) and (graylog_open_to_private is defined and graylog_open_to_private is true) %}
service:
  type: LoadBalancer
  loadBalancerIP: {{ oauth2_proxy_lb_ip }}
  port: 80
{% if nginx_private_ingress_annotations is defined and nginx_private_ingress_annotations %}
# you can define annotations in ansible for custom behaviour
# eg:
# nginx_private_ingress_annotations:
#   cloud.google.com/load-balancer-type: "Internal"
  annotations: {{nginx_private_ingress_annotations|to_json}}
{% else %}
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
{% endif %}
{% endif %}
